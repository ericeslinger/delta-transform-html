'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tokenize = tokenize;
function tokenize(ops) {
  var retVal = [];
  ops.forEach(function (op) {
    if (typeof op.insert !== 'string') {
      retVal.push({
        type: 'text',
        contents: op.insert,
        attributes: op.attributes || {}
      });
    } else if (op.insert === '\n') {
      retVal.push({
        type: 'linebreak',
        attributes: op.attributes || {}
      });
    } else if (op.insert.indexOf('\n') < 0) {
      retVal.push({
        type: 'text',
        contents: op.insert,
        attributes: op.attributes || {}
      });
    } else {
      var contents = op.insert;
      while (contents.length) {
        var nextNewline = contents.indexOf('\n');
        if (nextNewline === -1) {
          retVal.push({
            type: 'text',
            contents: contents,
            attributes: op.attributes || {}
          });
          contents = '';
        } else if (nextNewline === 0) {
          retVal.push({
            type: 'linebreak',
            attributes: {} });
          contents = contents.slice(nextNewline + 1);
        } else {
          retVal.push({
            type: 'text',
            contents: contents.slice(0, nextNewline),
            attributes: op.attributes || {}
          });
          retVal.push({
            type: 'linebreak',
            attributes: {} });
          contents = contents.slice(nextNewline + 1);
        }
      }
    }
  });
  if (retVal.length > 0 && retVal.slice(-1)[0].type !== 'linebreak') {
    retVal.push({
      type: 'linebreak',
      attributes: {} });
  }
  return retVal;
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZXJhdGlvbnMvdG9rZW5pemUuanMiXSwibmFtZXMiOlsidG9rZW5pemUiLCJvcHMiLCJyZXRWYWwiLCJmb3JFYWNoIiwib3AiLCJpbnNlcnQiLCJwdXNoIiwidHlwZSIsImNvbnRlbnRzIiwiYXR0cmlidXRlcyIsImluZGV4T2YiLCJsZW5ndGgiLCJuZXh0TmV3bGluZSIsInNsaWNlIl0sIm1hcHBpbmdzIjoiOzs7OztRQUFnQkEsUSxHQUFBQSxRO0FBQVQsU0FBU0EsUUFBVCxDQUFrQkMsR0FBbEIsRUFBdUI7QUFDNUIsTUFBTUMsU0FBUyxFQUFmO0FBQ0FELE1BQUlFLE9BQUosQ0FBWSxVQUFDQyxFQUFELEVBQVE7QUFDbEIsUUFBSSxPQUFPQSxHQUFHQyxNQUFWLEtBQXFCLFFBQXpCLEVBQW1DO0FBQ2pDSCxhQUFPSSxJQUFQLENBQVk7QUFDVkMsY0FBTSxNQURJO0FBRVZDLGtCQUFVSixHQUFHQyxNQUZIO0FBR1ZJLG9CQUFZTCxHQUFHSyxVQUFILElBQWlCO0FBSG5CLE9BQVo7QUFLRCxLQU5ELE1BTU8sSUFBSUwsR0FBR0MsTUFBSCxLQUFjLElBQWxCLEVBQXdCO0FBQzdCSCxhQUFPSSxJQUFQLENBQVk7QUFDVkMsY0FBTSxXQURJO0FBRVZFLG9CQUFZTCxHQUFHSyxVQUFILElBQWlCO0FBRm5CLE9BQVo7QUFJRCxLQUxNLE1BS0EsSUFBSUwsR0FBR0MsTUFBSCxDQUFVSyxPQUFWLENBQWtCLElBQWxCLElBQTBCLENBQTlCLEVBQWlDO0FBQ3RDUixhQUFPSSxJQUFQLENBQVk7QUFDVkMsY0FBTSxNQURJO0FBRVZDLGtCQUFVSixHQUFHQyxNQUZIO0FBR1ZJLG9CQUFZTCxHQUFHSyxVQUFILElBQWlCO0FBSG5CLE9BQVo7QUFLRCxLQU5NLE1BTUE7QUFDTCxVQUFJRCxXQUFXSixHQUFHQyxNQUFsQjtBQUNBLGFBQU9HLFNBQVNHLE1BQWhCLEVBQXdCO0FBQ3RCLFlBQU1DLGNBQWNKLFNBQVNFLE9BQVQsQ0FBaUIsSUFBakIsQ0FBcEI7QUFDQSxZQUFJRSxnQkFBZ0IsQ0FBQyxDQUFyQixFQUF3QjtBQUN0QlYsaUJBQU9JLElBQVAsQ0FBWTtBQUNWQyxrQkFBTSxNQURJO0FBRVZDLHNCQUFVQSxRQUZBO0FBR1ZDLHdCQUFZTCxHQUFHSyxVQUFILElBQWlCO0FBSG5CLFdBQVo7QUFLQUQscUJBQVcsRUFBWDtBQUNELFNBUEQsTUFPTyxJQUFJSSxnQkFBZ0IsQ0FBcEIsRUFBdUI7QUFDNUJWLGlCQUFPSSxJQUFQLENBQVk7QUFDVkMsa0JBQU0sV0FESTtBQUVWRSx3QkFBWSxFQUZGLEVBQVo7QUFJQUQscUJBQVdBLFNBQVNLLEtBQVQsQ0FBZUQsY0FBYyxDQUE3QixDQUFYO0FBQ0QsU0FOTSxNQU1BO0FBQ0xWLGlCQUFPSSxJQUFQLENBQVk7QUFDVkMsa0JBQU0sTUFESTtBQUVWQyxzQkFBVUEsU0FBU0ssS0FBVCxDQUFlLENBQWYsRUFBa0JELFdBQWxCLENBRkE7QUFHVkgsd0JBQVlMLEdBQUdLLFVBQUgsSUFBaUI7QUFIbkIsV0FBWjtBQUtBUCxpQkFBT0ksSUFBUCxDQUFZO0FBQ1ZDLGtCQUFNLFdBREk7QUFFVkUsd0JBQVksRUFGRixFQUFaO0FBSUFELHFCQUFXQSxTQUFTSyxLQUFULENBQWVELGNBQWMsQ0FBN0IsQ0FBWDtBQUNEO0FBQ0Y7QUFDRjtBQUNGLEdBakREO0FBa0RBLE1BQUtWLE9BQU9TLE1BQVAsR0FBZ0IsQ0FBakIsSUFBd0JULE9BQU9XLEtBQVAsQ0FBYSxDQUFDLENBQWQsRUFBaUIsQ0FBakIsRUFBb0JOLElBQXBCLEtBQTZCLFdBQXpELEVBQXVFO0FBQ3JFTCxXQUFPSSxJQUFQLENBQVk7QUFDVkMsWUFBTSxXQURJO0FBRVZFLGtCQUFZLEVBRkYsRUFBWjtBQUlEO0FBQ0QsU0FBT1AsTUFBUDtBQUNEIiwiZmlsZSI6Im9wZXJhdGlvbnMvdG9rZW5pemUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gdG9rZW5pemUob3BzKSB7XG4gIGNvbnN0IHJldFZhbCA9IFtdO1xuICBvcHMuZm9yRWFjaCgob3ApID0+IHtcbiAgICBpZiAodHlwZW9mIG9wLmluc2VydCAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHJldFZhbC5wdXNoKHtcbiAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICBjb250ZW50czogb3AuaW5zZXJ0LFxuICAgICAgICBhdHRyaWJ1dGVzOiBvcC5hdHRyaWJ1dGVzIHx8IHt9LFxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChvcC5pbnNlcnQgPT09ICdcXG4nKSB7XG4gICAgICByZXRWYWwucHVzaCh7XG4gICAgICAgIHR5cGU6ICdsaW5lYnJlYWsnLFxuICAgICAgICBhdHRyaWJ1dGVzOiBvcC5hdHRyaWJ1dGVzIHx8IHt9LFxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChvcC5pbnNlcnQuaW5kZXhPZignXFxuJykgPCAwKSB7XG4gICAgICByZXRWYWwucHVzaCh7XG4gICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgY29udGVudHM6IG9wLmluc2VydCxcbiAgICAgICAgYXR0cmlidXRlczogb3AuYXR0cmlidXRlcyB8fCB7fSxcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBsZXQgY29udGVudHMgPSBvcC5pbnNlcnQ7XG4gICAgICB3aGlsZSAoY29udGVudHMubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IG5leHROZXdsaW5lID0gY29udGVudHMuaW5kZXhPZignXFxuJyk7XG4gICAgICAgIGlmIChuZXh0TmV3bGluZSA9PT0gLTEpIHtcbiAgICAgICAgICByZXRWYWwucHVzaCh7XG4gICAgICAgICAgICB0eXBlOiAndGV4dCcsXG4gICAgICAgICAgICBjb250ZW50czogY29udGVudHMsXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBvcC5hdHRyaWJ1dGVzIHx8IHt9LFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGNvbnRlbnRzID0gJyc7XG4gICAgICAgIH0gZWxzZSBpZiAobmV4dE5ld2xpbmUgPT09IDApIHtcbiAgICAgICAgICByZXRWYWwucHVzaCh7XG4gICAgICAgICAgICB0eXBlOiAnbGluZWJyZWFrJyxcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHt9LCAvLyBtaWQtaW5zZXJ0IGxpbmVicmVha3MgaGF2ZSBubyBsaW5lLWxldmVsIHN0eWxpbmdcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBjb250ZW50cyA9IGNvbnRlbnRzLnNsaWNlKG5leHROZXdsaW5lICsgMSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0VmFsLnB1c2goe1xuICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgICAgY29udGVudHM6IGNvbnRlbnRzLnNsaWNlKDAsIG5leHROZXdsaW5lKSxcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IG9wLmF0dHJpYnV0ZXMgfHwge30sXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0VmFsLnB1c2goe1xuICAgICAgICAgICAgdHlwZTogJ2xpbmVicmVhaycsXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiB7fSwgLy8gbWlkLWluc2VydCBsaW5lYnJlYWtzIGhhdmUgbm8gbGluZS1sZXZlbCBzdHlsaW5nXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgY29udGVudHMgPSBjb250ZW50cy5zbGljZShuZXh0TmV3bGluZSArIDEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgaWYgKChyZXRWYWwubGVuZ3RoID4gMCkgJiYgKHJldFZhbC5zbGljZSgtMSlbMF0udHlwZSAhPT0gJ2xpbmVicmVhaycpKSB7XG4gICAgcmV0VmFsLnB1c2goe1xuICAgICAgdHlwZTogJ2xpbmVicmVhaycsXG4gICAgICBhdHRyaWJ1dGVzOiB7fSwgLy8gbWlkLWluc2VydCBsaW5lYnJlYWtzIGhhdmUgbm8gbGluZS1sZXZlbCBzdHlsaW5nXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHJldFZhbDtcbn1cbiJdfQ==
