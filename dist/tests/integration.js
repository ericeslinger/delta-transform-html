'use strict';

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _index = require('../index');

var transform = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_chai2.default.use(_chaiAsPromised2.default); /* eslint-env node, mocha*/

var expect = _chai2.default.expect;

var testVal = {
  ops: [{ insert: 'multiline\nvalue' }, { insert: '\n' }, { insert: 'simple text' }, { insert: ' with a\n' }, { insert: '\nfollowing text\n\n' }, { insert: 'bulleted list one', attributes: { link: 'linkTarget' } }, { insert: '\n', attributes: { list: 'bullet' } }, { insert: 'bulleted list two' }, { insert: '\n', attributes: { list: 'bullet' } }, { insert: 'bulleted list three' }, { insert: '\n', attributes: { list: 'bullet' } }, { insert: 'numbered list one' }, { insert: '\n', attributes: { list: 'ordered' } }, { insert: 'numbered list two' }, { insert: '\n', attributes: { ordered: true } }, { insert: 'numbered list three' }, { insert: '\n', attributes: { list: 'ordered' } }, { insert: 'header two' }, { insert: '\n', attributes: { header: 2 } }, { insert: 'underlined header one', attributes: { underline: true } }, { insert: '\n', attributes: { header: 1 } }, { insert: 'red', attributes: { color: 'red' } }, { insert: 'bgred', attributes: { bg: 'red' } }, { insert: 'strikethru', attributes: { strike: true } }, { insert: '\n' }, { insert: { image: 'IMAGEURL' } }, { insert: 'escaped HTML & < > " \' &' }, { insert: '\n' }, { insert: 'empty newline should have nbsp (four after this)\n\n\n' }, { insert: '\n' }, { insert: '\n' }, { insert: 'old image style:' }, { insert: '1', attributes: { image: 'IMAGEURL' } }, { insert: '\n' }, { insert: 'going NUTS', attributes: {
      italic: true,
      bold: true,
      sub: true,
      super: true,
      bg: '#000000',
      color: '#ffffff',
      strike: true,
      underline: true
    } }, { insert: '\n' }, { insert: 'bold multiline\nvalue', attributes: { bold: true } }, { insert: 'italic value', attributes: { italic: true } }, { insert: 'bold-italic value', attributes: { bold: true, italic: true } }, { insert: '\n' }]
};

var integrationResultPlain = 'multiline\nvalue\nsimple text with a\n\nfollowing text\n\n* bulleted list one\n* bulleted list two\n* bulleted list three\n\n* numbered list one\n* numbered list two\n* numbered list three\n\nheader two\nunderlined header one\nredbgredstrikethru\nIMAGE: IMAGEURLescaped HTML & < > " \' &\nempty newline should have nbsp (four after this)\n\n\n\n\nold image style:IMAGE: IMAGEURL\ngoing NUTS\nbold multiline\nvalueitalic valuebold-italic value\n';

var integrationResultHTML = '<p>' + '<span>multiline</span>' + '</p>' + '<p>' + '<span>value</span>' + '</p>' + '<p>' + '<span>simple text with a</span>' + '</p>' + '<p>' + '<span>&nbsp;</span>' + '</p>' + '<p>' + '<span>following text</span>' + '</p>' + '<p>' + '<span>&nbsp;</span>' + '</p>' + '<ul>' + '<li>' + '<a target="_blank" href="linkTarget">' + '<span>bulleted list one</span>' + '</a>' + '</li>' + '<li>' + '<span>bulleted list two</span>' + '</li>' + '<li>' + '<span>bulleted list three</span>' + '</li>' + '</ul>' + '<ol>' + '<li>' + '<span>numbered list one</span>' + '</li>' + '<li>' + '<span>numbered list two</span>' + '</li>' + '<li>' + '<span>numbered list three</span>' + '</li>' + '</ol>' + '<h2>' + '<span>header two</span>' + '</h2>' + '<h1>' + '<u>' + '<span>underlined header one</span>' + '</u>' + '</h1>' + '<p>' + '<span style="color:red;">' + '<span>red</span>' + '</span>' + '<span style="background-color:red;">' + '<span>bgred</span>' + '</span>' + '<s>' + '<span>strikethru</span>' + '</s>' + '</p>' + '<p>' + '<img src="IMAGEURL">' + '<span>escaped HTML &amp; &lt; &gt; &quot; &#39; &amp;</span>' + '</p>' + '<p>' + '<span>empty newline should have nbsp (four after this)</span>' + '</p>' + '<p>' + '<span>&nbsp;</span>' + '</p>' + '<p>' + '<span>&nbsp;</span>' + '</p>' + '<p>' + '<span>&nbsp;</span>' + '</p>' + '<p>' + '<span>&nbsp;</span>' + '</p>' + '<p>' + '<span>old image style:</span>' + '<img src="IMAGEURL">' + '</p>' + '<p>' + '<sup>' + '<sub>' + '<s>' + '<span style="background-color:#000000;">' + '<span style="color:#ffffff;">' + '<u>' + '<em>' + '<strong>' + '<span>going NUTS</span>' + '</strong>' + '</em>' + '</u>' + '</span>' + '</span>' + '</s>' + '</sub>' + '</sup>' + '</p>' + '<p>' + '<strong>' + '<span>bold multiline</span>' + '</strong>' + '</p>' + '<p>' + '<strong>' + '<span>value</span>' + '</strong>' + '<em>' + '<span>italic value</span>' + '<strong>' + '<span>bold-italic value</span>' + '</strong>' + '</em>' + '</p>';

describe('integration', function () {
  it('synchronously output html that meets all specifications', function () {
    return expect(transform.transform(testVal)).to.equal(integrationResultHTML);
  });
  it('synchronously output plain text that meets all specifications', function () {
    return expect(transform.plainText(testVal)).to.equal(integrationResultPlain);
  });
  it('asynchronously output html that meets all specifications', function () {
    return expect(transform.transformAsync(testVal)).to.eventually.equal(integrationResultHTML);
  });
  it('asynchronously output plain text that meets all specifications', function () {
    return expect(transform.plainTextAsync(testVal)).to.eventually.equal(integrationResultPlain);
  });
});
//# sourceMappingURL=data:application/json;base64,
